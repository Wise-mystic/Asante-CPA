name: Build and Deploy to cPanel

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm ci
          echo "Dependencies installed successfully"
          echo "Checking package.json build script:"
          npm run build --dry-run 2>/dev/null || echo "Build script exists: $(npm run build --dry-run 2>&1 | head -1)"

      - name: Build app
        run: |
          echo "Starting build process..."
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Current directory: $(pwd)"
          echo "Contents before build:"
          ls -la
          
          echo "Running npm run build..."
          # Set NODE_ENV to production for build
          export NODE_ENV=production
          npm run build
          
          echo "Build completed. Checking for dist directory..."
          echo "Contents after build:"
          ls -la
          
          # Check if dist directory exists and has content
          if [ -d "dist" ] && [ "$(ls -A dist)" ]; then
            echo "‚úÖ dist directory found with content!"
            echo "Dist directory contents:"
            ls -la dist/
            echo "Dist directory size:"
            du -sh dist/
          else
            echo "‚ùå dist directory not found or empty. Checking for other build directories..."
            echo "Looking for build directories:"
            ls -la | grep -E "(build|out|dist)"
            echo "All files and directories:"
            ls -la
            echo "Checking if any .html files exist:"
            find . -name "*.html" -type f
            echo "Checking for build errors in node_modules:"
            if [ -d "node_modules" ]; then
              echo "node_modules exists"
            else
              echo "node_modules missing - this could cause build failures"
            fi
            echo "Checking vite config:"
            if [ -f "vite.config.js" ]; then
              echo "vite.config.js exists"
              grep -n "outDir" vite.config.js || echo "No outDir specified in vite config"
            else
              echo "vite.config.js not found"
            fi
            echo "Build logs (last 50 lines):"
            echo "No build logs available - this suggests the build command failed silently"
            exit 1
          fi

      - name: Create deploy branch
        run: |
          # Verify dist directory exists before proceeding
          if [ ! -d "dist" ] || [ ! "$(ls -A dist)" ]; then
            echo "‚ùå Error: dist directory does not exist or is empty"
            echo "Available directories:"
            ls -la
            exit 1
          fi
          
          echo "‚úÖ dist directory verified, proceeding with deployment..."
          
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Create or update deploy branch
          git checkout -B deploy
          
          # Remove everything except .git
          find . -maxdepth 1 -not -name '.git' -not -name '.' -exec rm -rf {} +
          
          # Copy dist contents to root
          echo "Copying dist contents..."
          # Enable dotglob to include hidden files
          shopt -s dotglob
          cp -r dist/* .
          shopt -u dotglob
          
          echo "Files copied successfully:"
          ls -la
          
          # Add and commit (handle case where no changes exist)
          git add -A
          if git diff --cached --exit-code; then
            echo "No changes to commit"
          else
            git commit -m "Deploy: $(date)"
          fi
          
          # Push to deploy branch
          git push -f origin deploy

      - name: Notify deployment
        run: |
          echo "‚úÖ Deployment completed!"
          echo "üìÅ Files deployed to deploy branch"
          echo "üîó Next: Set up cPanel Git Version Control to pull from deploy branch"