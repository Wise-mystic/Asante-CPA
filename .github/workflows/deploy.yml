name: Build and Deploy to cPanel

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm ci
          echo "Dependencies installed successfully"
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Checking if vite is available:"
          npx vite --version || echo "Vite not found"
          echo "Checking vite config:"
          if [ -f "vite.config.js" ]; then
            echo "vite.config.js exists"
            grep -n "outDir" vite.config.js || echo "No outDir specified"
          else
            echo "vite.config.js not found"
          fi

      - name: Build app
        run: |
          echo "Starting build process..."
          echo "Current directory: $(pwd)"
          echo "Contents before build:"
          ls -la
          
          export NODE_ENV=production
          echo "Running npm run build..."
          npm run build
          
          echo "Build completed. Checking for dist directory..."
          echo "Contents after build:"
          ls -la
          
          if [ ! -d "dist" ] || [ ! "$(ls -A dist)" ]; then
            echo "‚ùå dist directory not found or empty"
            echo "Available directories:"
            ls -la
            echo "Checking for any build output:"
            find . -name "*.html" -o -name "*.js" -o -name "*.css" | head -10
            exit 1
          fi
          
          echo "‚úÖ dist directory found with content!"
          echo "Dist directory contents:"
          ls -la dist/
          echo "Dist directory size:"
          du -sh dist/

      - name: Prepare deploy branch
        run: |
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          # Commit build output on main
          git add dist
          git commit -m "Build output before deploy" || echo "No changes to commit"
          # Switch to deploy branch
          if git ls-remote --heads origin deploy | grep -q deploy; then
            git fetch origin deploy:deploy
            git checkout deploy
          else
            git checkout -b deploy
          fi
          # Remove everything except .git
          find . -maxdepth 1 -not -name '.git' -not -name '.' -exec rm -rf {} +
          # Copy build assets only
          cp -r ../dist/* .
          git add -A
          git commit -m "Deploy: $(date)" || echo "No changes to commit"
          git push -f origin deploy

      - name: Notify deployment
        run: |
          echo "‚úÖ Deployment completed!"
          echo "üìÅ Files deployed to deploy branch"
          echo "üîó Next: Set up cPanel Git Version Control to pull from deploy branch"